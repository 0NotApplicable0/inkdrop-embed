{"version":3,"sources":["../src/embed.js"],"names":["module","exports","origAComponent","config","autolinks","title","type","default","activate","markdownRenderer","setupLinkComponent","window","addEventListener","handleMessageFromFrame","deactivate","unsetLinkComponent","removeEventListener","OrigA","remarkReactComponents","a","RemarkAnchor","event","data","Object","message","id","height","i","document","getElementById","style","parseInt","electron","require","shell","uri","openExternal","inkdrop","sendMessageToNative","params"],"mappings":";;AAAA;;AACA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,cAAc,EAAE,IADD;AAEfC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE,kCADE;AAETC,MAAAA,IAAI,EAAE,SAFG;AAGTC,MAAAA,OAAO,EAAE;AAHA;AADL,GAFO;;AAUfC,EAAAA,QAAQ,GAAG;AACT,QAAIC,yBAAJ,EAAsB;AACpB,WAAKC,kBAAL;AACD;;AAEDC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKC,sBAAxC,EAAgE,KAAhE;AACD,GAhBc;;AAkBfC,EAAAA,UAAU,GAAG;AACX,QAAIL,yBAAJ,EAAsB;AACpB,WAAKM,kBAAL;AACD;;AACDJ,IAAAA,MAAM,CAACK,mBAAP,CAA2B,SAA3B,EAAsC,KAAKH,sBAA3C,EAAmE,KAAnE;AACD,GAvBc;;AAyBfH,EAAAA,kBAAkB,GAAG;AACnB,UAAMO,KAAK,GAAGR,0BAAiBS,qBAAjB,CAAuCC,CAArD;AACA,UAAMC,YAAY,GAAG,2BAAmBH,KAAnB,CAArB;AACAR,8BAAiBS,qBAAjB,CAAuCC,CAAvC,GAA2CC,YAA3C;AACA,SAAKlB,cAAL,GAAsBe,KAAtB;AACD,GA9Bc;;AAgCfF,EAAAA,kBAAkB,GAAG;AACnBN,8BAAiBS,qBAAjB,CAAuCC,CAAvC,GAA2C,KAAKjB,cAAhD;AACD,GAlCc;;AAoCfW,EAAAA,sBAAsB,CAACQ,KAAD,EAAQ;AAC5B,UAAM;AAAEC,MAAAA;AAAF,QAAWD,KAAjB;;AACA,QAAIC,IAAI,YAAYC,MAApB,EAA4B;AAC1B,cAAQD,IAAI,CAACE,OAAb;AACE,aAAK,0BAAL;AACE,gBAAM;AAAEC,YAAAA,EAAF;AAAMC,YAAAA;AAAN,cAAiBJ,IAAvB;AACA,cAAIK,CAAC,GAAGC,QAAQ,CAACC,cAAT,CAAwBJ,EAAxB,CAAR;AACAE,UAAAA,CAAC,CAACG,KAAF,CAAQJ,MAAR,GAAiBK,QAAQ,CAACL,MAAD,CAAR,GAAmB,IAApC;AACA;;AACF,aAAK,qBAAL;AACE,gBAAMM,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,cAAID,QAAQ,IAAIA,QAAQ,CAACE,KAAzB,EAAgC;AAC9B,kBAAM;AAAEC,cAAAA;AAAF,gBAAUb,IAAhB;AACAU,YAAAA,QAAQ,CAACE,KAAT,CAAeE,YAAf,CAA4BD,GAA5B;AACA;AACD,WAJD,MAIO,IAAIxB,MAAM,CAAC0B,OAAP,CAAeC,mBAAnB,EAAwC;AAC7C3B,YAAAA,MAAM,CAAC0B,OAAP,CAAeC,mBAAf,CAAmC;AACjCd,cAAAA,OAAO,EAAE,gBADwB;AAEjCe,cAAAA,MAAM,EAAE;AAAEJ,gBAAAA;AAAF;AAFyB,aAAnC;AAID;;AAjBL;AAmBD;AACF;;AA3Dc,CAAjB","sourcesContent":["import createRemarkAnchor from './remark-anchor'\nimport { markdownRenderer } from 'inkdrop'\n\nmodule.exports = {\n  origAComponent: null,\n  config: {\n    autolinks: {\n      title: 'Create embeds from standard URLs',\n      type: 'boolean',\n      default: true\n    }\n  },\n\n  activate() {\n    if (markdownRenderer) {\n      this.setupLinkComponent()\n    }\n\n    window.addEventListener('message', this.handleMessageFromFrame, false)\n  },\n\n  deactivate() {\n    if (markdownRenderer) {\n      this.unsetLinkComponent()\n    }\n    window.removeEventListener('message', this.handleMessageFromFrame, false)\n  },\n\n  setupLinkComponent() {\n    const OrigA = markdownRenderer.remarkReactComponents.a\n    const RemarkAnchor = createRemarkAnchor(OrigA)\n    markdownRenderer.remarkReactComponents.a = RemarkAnchor\n    this.origAComponent = OrigA\n  },\n\n  unsetLinkComponent() {\n    markdownRenderer.remarkReactComponents.a = this.origAComponent\n  },\n\n  handleMessageFromFrame(event) {\n    const { data } = event\n    if (data instanceof Object) {\n      switch (data.message) {\n        case 'embed:adjust-iframe-size':\n          const { id, height } = data\n          var i = document.getElementById(id)\n          i.style.height = parseInt(height) + 'px'\n          break\n        case 'embed:open-external':\n          const electron = require('electron')\n          if (electron && electron.shell) {\n            const { uri } = data\n            electron.shell.openExternal(uri)\n            break\n          } else if (window.inkdrop.sendMessageToNative) {\n            window.inkdrop.sendMessageToNative({\n              message: 'core:open-link',\n              params: { uri }\n            })\n          }\n      }\n    }\n  }\n}\n"],"file":"embed.js"}